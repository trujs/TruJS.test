{
  "root": [{ "TruJS": [":TruJS"] }]
  , "promise": [":Promise"]
  , "setTimeout": [":setTimeout"]
  , "nodePath": [":require('path')"]
  , "nodeFs": [":require('fs')"]
  , "nodeCwd": [":process.cwd()"]
  , "nodeRequire": [":require"]
  , "originTimestamp": [":Date.now()"]
  , "performance": ["TruJS.timing._Performance",[]]
  , "functionInspector": ["TruJS.func._Inspector", []]
  , "funcAsync": ["TruJS.func._Async",[]]
  , "number": ["TruJS._Number", []]
  , "isInteger": [".number.isInteger"]
  , "object": ["TruJS._Object", []]
  , "objectIsMatch": [".object.isMatch"]
  , "objectLookup": [".object.lookup"]
  , "resolve": [".objectLookup", [], { "bind": { "scope": null, "args": [] }, "runFactory": false }]
  , "array": ["TruJS._Array", []]
  , "arrayFromArguments": [".array.fromArguments"]
  , "arrayPrune": [".array.prune"]
  , "regEx": ["TruJS._RegEx", []]
  , "regExGetMatches": [".regEx.getMatches"]
  , "createElement": [".document.createElement", [], { "bind": { "scope": [".document"] }, "runFactory": false }]
  , "createTextNode": [".document.createTextNode", [], { "bind": { "scope": [".document"] }, "runFactory": false }]
  , "getElementById": [".document.getElementById", [], { "bind": { "scope": [".document"] }, "runFactory": false }]
  , "getElementsByTagName": [".document.getElementsByTagName", [], { "bind": { "scope": [".document"] }, "runFactory": false }]
  , "querySelector": [".document.querySelector", [], { "bind": { "scope": [".document"] }, "runFactory": false }]
  , "funcWrapper": ["TruJS.func._Wrapper", []]
  , "stack": ["TruJS.func._Stack", []]
  , "async": ["TruJS.func._Async", []]
  , "elementHelper": ["TruJS.dom._ElementHelper", []]
  , "classHelper": ["TruJS.dom._ClassHelper", []]
  , "nodeBodyParser": [":require('body-parser')"]
  , "htmlEncoder": ["TruJS.encode._HtmlEncoder", []]
  , "mock": ["TruJS.test.mock._Mock", []]
  , "mockGetStack": true
  , "mockCallback": ["TruJS.test.mock._Callback", []]
  , "isMockCallback": [".mockCallback.isCallback",[], false]
  , "mockException": ["TruJS.test.mock.Exception", [], false]
  , "mockElement": ["TruJS.test.mock.mocked._MockElement", []]
  , "mockXMLHttpRequest": ["TruJS.test.mock.mocked._MockXMLHttpRequest", []]
  , "getValue": ["TruJS.test._GetValue", []]
  , "isGetValue": [".getValue.isGetValue", [], false]
  , "testPackage": ["TruJS.test._Package", ["\b", "\b", null]]
  , "testArray": null
  , "testResolver": ["TruJS.test._Resolver", []]
  , "testAssertion": ["TruJS.test._Assertion", []]
  , "assertions": [{
    "equals": ["TruJS.test.assertions._Equals", []]
    , "contains": ["TruJS.test.assertions._Contains", []]
    , "endsWith": ["TruJS.test.assertions._EndsWith", []]
    , "beginsWith": ["TruJS.test.assertions._BeginsWith", []]
    , "matches": ["TruJS.test.assertions._Matches", []]
    , "isAlmost": ["TruJS.test.assertions._IsAlmost", []]
    , "isTrue": ["TruJS.test.assertions._IsTrue", []]
    , "isFalse": ["TruJS.test.assertions._IsFalse", []]
    , "isNull": ["TruJS.test.assertions._IsNull", []]
    , "isUndef": ["TruJS.test.assertions._IsUndef", []]
    , "isNill": ["TruJS.test.assertions._IsNill", []]
    , "isGreaterThan": ["TruJS.test.assertions._IsGreaterThan", []]
    , "isLessThan": ["TruJS.test.assertions._IsLessThan", []]
    , "isBetween": ["TruJS.test.assertions._IsBetween", []]
    , "isWithin": ["TruJS.test.assertions._IsWithin", []]
    , "isEmpty": ["TruJS.test.assertions._IsEmpty", []]
    , "isOfType": ["TruJS.test.assertions._IsOfType", []]
    , "isUnique": ["TruJS.test.assertions._IsUnique", []]
    , "isError": ["TruJS.test.assertions._IsError", []]
    , "isExtensible": ["TruJS.test.assertions._IsExtensible", []]
    , "isSealed": ["TruJS.test.assertions._IsSealed", []]
    , "isFrozen": ["TruJS.test.assertions._IsFrozen", []]
    , "hasProperty": ["TruJS.test.assertions._HasProperty", []]
    , "hasMember": ["TruJS.test.assertions._HasMember", []]
    , "hasMemberCountOf": ["TruJS.test.assertions._HasMemberCountOf",[]]
    , "hasPropertyCountOf": ["TruJS.test.assertions._HasPropertyCountOf", []]
    , "hasBeenCalled": ["TruJS.test.assertions._HasBeenCalled", []]
    , "hasBeenCalledWith": ["TruJS.test.assertions._HasBeenCalledWith", []]
    , "hasBeenCalledWithArg": ["TruJS.test.assertions._HasBeenCalledWithArg", []]
    , "hasBeenCalledWithScope": ["TruJS.test.assertions._HasBeenCalledWithScope", []]
    , "hasArgCountOf": ["TruJS.test.assertions._HasArgCountOf", []]
    , "hasResponseOf": ["TruJS.test.assertions._HasResponseOf", []]
  }]
  , "conversions": [{
    "toString": ["TruJS.test.conversions._ToString", []]
    , "stringify": ["TruJS.test.conversions._Stringify", []]
    , "getKeys": ["TruJS.test.conversions._GetKeys", []]
    , "getCallbackArgs": ["TruJS.test.conversions._GetCallbackArgs", []]
    , "getCallbackArg": ["TruJS.test.conversions._GetCallbackArg", []]
    , "getCallbackResp": ["TruJS.test.conversions._GetCallbackResp", []]
    , "getAttribute": ["TruJS.test.conversions._GetAttribute", []]
    , "hasAttribute": ["TruJS.test.conversions._HasAttribute", []]
    , "getStyle": ["TruJS.test.conversions._GetStyle", []]
    , "hasStyle": ["TruJS.test.conversions._HasStyle", []]
  }]
  , "testRunner": ["TruJS.test._Runner", []]
  , "testReporter": ["TruJS.log._Reporter", []]
  , "testResultProcessor": ["TruJS.test._ResultProcessor", []]
  , "testDependencies": [{
    "callback": [".mockCallback"]
    , "mock": [".mock"]
    , "exception": [".mockException"]
    , "element": [".mockElement"]
    , "xmlHttpRequest": [".mockXMLHttpRequest"]
    , "promise": [".promise"]
    , "document": [".document"]
    , "window": [".global"]
  }]
  , "errors": ["TruJS.test.Errors", [], false]
  , "defaults": ["TruJS.test.Defaults", [], false]
}
